import { jsx } from 'react/jsx-runtime';
import { createContext, useMemo } from 'react';
import defaultTheme from '../../lib/theme/defaultTheme.js';
import { mergeDeep } from '../../utils/mergeDeep.js';

const ThemeContext = /*#__PURE__*/createContext({
  theme: defaultTheme // mode: 'light',
  // toggleMode: true,

});

const ThemeProvider = ({
  children,
  theme: customTheme // dark,
  // usePreferences = false,

}) => {
  const mergedTheme = mergeDeep(defaultTheme, customTheme); // const [mode, setMode, toggleMode] = useDarkMode(usePreferences)
  // useLayoutEffect(() => {
  //   if (dark) {
  //     if (setMode != null) {
  //       setMode('dark')
  //     }
  //     document.documentElement.classList.add(`dark`)
  //   }
  // }, [dark])

  const value = useMemo(() => ({
    theme: mergedTheme // mode,
    // toggleMode,

  }), []); // console.log('defaultTheme', defaultTheme)

  return jsx(ThemeContext.Provider, Object.assign({
    value: value
  }, {
    children: children
  }), void 0);
};

export { ThemeContext, ThemeProvider as default };
