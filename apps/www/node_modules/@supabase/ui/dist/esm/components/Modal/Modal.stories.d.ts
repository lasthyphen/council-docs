import React from 'react';
declare const _default: {
    title: string;
    component: {
        ({ children, customFooter, closable, description, hideFooter, alignFooter, layout, loading, cancelText, onConfirm, onCancel, confirmText, showIcon, title, footerBackground, icon, variant, visible, size, style, overlayStyle, contentStyle, className, overlayClassName, triggerElement, header, ...props }: import("./Modal").ModalProps): JSX.Element;
        Content: ({ children }: {
            children: React.ReactNode;
        }) => JSX.Element;
        Seperator: typeof import("./Modal").Seperator;
    };
    argTypes: {
        onClick: {
            action: string;
        };
    };
};
export default _default;
export declare const withUseState: () => JSX.Element;
export declare const Default: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        size: string;
    };
};
export declare const withIcon: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        showIcon: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        icon: JSX.Element;
    };
};
export declare const withVerticalLayout: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        size: string;
        layout: string;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        icon: JSX.Element;
    };
};
export declare const withCloseButton: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        closable: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
    };
};
export declare const rightAlignedFooter: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        alignFooter: string;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
    };
};
export declare const hideFooter: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        hideFooter: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
    };
};
export declare const withFooterBackground: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        footerBackground: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
    };
};
export declare const customFooter: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        customFooter: JSX.Element[];
    };
};
export declare const customFooterVertical: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        size: string;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        layout: string;
        customFooter: JSX.Element[];
    };
};
export declare const LongModal: () => JSX.Element;
export declare const customFooterOneButton: {
    (args: any): JSX.Element;
    args: {
        visible: boolean;
        size: string;
        icon: JSX.Element;
        onCancel: import("@storybook/addon-actions").HandlerFunction;
        onConfirm: import("@storybook/addon-actions").HandlerFunction;
        title: string;
        description: string;
        layout: string;
        customFooter: JSX.Element[];
    };
};
export declare const modalWithDropdowns: () => JSX.Element;
