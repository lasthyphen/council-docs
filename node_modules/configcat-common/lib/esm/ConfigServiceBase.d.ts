import { IConfigFetcher } from "./index";
import { OptionsBase } from "./ConfigCatClientOptions";
import { ProjectConfig } from "./ProjectConfig";
export interface IConfigService {
    getConfig(): Promise<ProjectConfig | null>;
    refreshConfigAsync(): Promise<ProjectConfig | null>;
}
export declare abstract class ConfigServiceBase {
    protected configFetcher: IConfigFetcher;
    protected baseConfig: OptionsBase;
    private fetchLogicCallbacks;
    constructor(configFetcher: IConfigFetcher, baseConfig: OptionsBase);
    protected refreshLogicBaseAsync(lastProjectConfig: ProjectConfig | null, forceUpdateCache?: boolean): Promise<ProjectConfig | null>;
    private fetchLogic;
    private fetchLogicInternal;
}
//# sourceMappingURL=ConfigServiceBase.d.ts.map