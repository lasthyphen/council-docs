export declare class ProjectConfig {
    /** Entity identifier */
    HttpETag?: string;
    /** ConfigCat config */
    ConfigJSON: any;
    /** Timestamp in milliseconds */
    Timestamp: number;
    constructor(timeStamp: number, jsonConfig: string, httpETag?: string);
    /**
     * Determines whether the specified ProjectConfig instances are considered equal.
     */
    static equals(projectConfig1: ProjectConfig | null, projectConfig2: ProjectConfig | null): boolean;
    static compareEtags(etag1?: string, etag2?: string): boolean;
    private static ensureStrictEtag;
}
export declare class ConfigFile {
    static Preferences: string;
    static FeatureFlags: string;
}
export declare class Preferences {
    static BaseUrl: string;
    static Redirect: string;
}
export declare class Setting {
    static Value: string;
    static SettingType: string;
    static RolloutPercentageItems: string;
    static RolloutRules: string;
    static VariationId: string;
    value: any;
    rolloutPercentageItems: RolloutPercentageItem[];
    rolloutRules: RolloutRule[];
    variationId: string;
    constructor(value: any, rolloutPercentageItems: RolloutPercentageItem[], rolloutRules: RolloutRule[], variationId: string);
    static fromJson(json: any): Setting;
}
export declare class RolloutRule {
    static Order: string;
    static ComparisonAttribute: string;
    static Comparator: string;
    static ComparisonValue: string;
    static Value: string;
    static VariationId: string;
    comparisonAttribute: string;
    comparator: number;
    comparisonValue: string;
    value: any;
    variationId: string;
    constructor(comparisonAttribute: string, comparator: number, comparisonValue: string, value: any, variationId: string);
    static fromJson(json: any): RolloutRule;
}
export declare class RolloutPercentageItem {
    static Order: string;
    static Value: string;
    static Percentage: string;
    static VariationId: string;
    percentage: number;
    value: any;
    variationId: string;
    constructor(percentage: number, value: any, variationId: string);
    static fromJson(json: any): RolloutPercentageItem;
}
//# sourceMappingURL=ProjectConfig.d.ts.map