import { PostgresMetaResult, PostgresRole } from './types';
export default class PostgresMetaRoles {
    query: (sql: string) => Promise<PostgresMetaResult<any>>;
    constructor(query: (sql: string) => Promise<PostgresMetaResult<any>>);
    list({ includeDefaultRoles, includeSystemSchemas, limit, offset, }?: {
        includeDefaultRoles?: boolean;
        includeSystemSchemas?: boolean;
        limit?: number;
        offset?: number;
    }): Promise<PostgresMetaResult<PostgresRole[]>>;
    retrieve({ id }: {
        id: number;
    }): Promise<PostgresMetaResult<PostgresRole>>;
    retrieve({ name }: {
        name: string;
    }): Promise<PostgresMetaResult<PostgresRole>>;
    create({ name, is_superuser, can_create_db, can_create_role, inherit_role, can_login, is_replication_role, can_bypass_rls, connection_limit, password, valid_until, member_of, members, admins, }: {
        name: string;
        is_superuser?: boolean;
        can_create_db?: boolean;
        can_create_role?: boolean;
        inherit_role?: boolean;
        can_login?: boolean;
        is_replication_role?: boolean;
        can_bypass_rls?: boolean;
        connection_limit?: number;
        password?: string;
        valid_until?: string;
        member_of?: string[];
        members?: string[];
        admins?: string[];
    }): Promise<PostgresMetaResult<PostgresRole>>;
    update(id: number, { name, is_superuser, can_create_db, can_create_role, inherit_role, can_login, is_replication_role, can_bypass_rls, connection_limit, password, valid_until, }: {
        name?: string;
        is_superuser?: boolean;
        can_create_db?: boolean;
        can_create_role?: boolean;
        inherit_role?: boolean;
        can_login?: boolean;
        is_replication_role?: boolean;
        can_bypass_rls?: boolean;
        connection_limit?: number;
        password?: string;
        valid_until?: string;
    }): Promise<PostgresMetaResult<PostgresRole>>;
    remove(id: number): Promise<PostgresMetaResult<PostgresRole>>;
}
//# sourceMappingURL=PostgresMetaRoles.d.ts.map