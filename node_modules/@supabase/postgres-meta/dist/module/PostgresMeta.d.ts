import { PoolConfig } from 'pg';
import PostgresMetaColumns from './PostgresMetaColumns';
import PostgresMetaConfig from './PostgresMetaConfig';
import PostgresMetaExtensions from './PostgresMetaExtensions';
import PostgresMetaFunctions from './PostgresMetaFunctions';
import PostgresMetaPolicies from './PostgresMetaPolicies';
import PostgresMetaPublications from './PostgresMetaPublications';
import PostgresMetaRoles from './PostgresMetaRoles';
import PostgresMetaSchemas from './PostgresMetaSchemas';
import PostgresMetaTables from './PostgresMetaTables';
import PostgresMetaTriggers from './PostgresMetaTriggers';
import PostgresMetaTypes from './PostgresMetaTypes';
import PostgresMetaVersion from './PostgresMetaVersion';
import { PostgresMetaResult } from './types';
export default class PostgresMeta {
    query: (sql: string) => Promise<PostgresMetaResult<any>>;
    end: () => Promise<void>;
    columns: PostgresMetaColumns;
    config: PostgresMetaConfig;
    extensions: PostgresMetaExtensions;
    functions: PostgresMetaFunctions;
    policies: PostgresMetaPolicies;
    publications: PostgresMetaPublications;
    roles: PostgresMetaRoles;
    schemas: PostgresMetaSchemas;
    tables: PostgresMetaTables;
    triggers: PostgresMetaTriggers;
    types: PostgresMetaTypes;
    version: PostgresMetaVersion;
    constructor(config: PoolConfig);
}
//# sourceMappingURL=PostgresMeta.d.ts.map